{
	"info": {
		"_postman_id": "7145b854-2fb7-4976-95fc-eea600351565",
		"name": "Capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "/movies (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"James Bond\",\r\n    \"releasedate\": \"01.01.1985\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies/5",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie/1  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Daniel Craig\",\r\n    \"age\": 46,\r\n    \"gender\": \"male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Arnold Scwarzenegger\",\r\n    \"age\": 65,\r\n    \"gender\": \"male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "/movies  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Movies is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_movies).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Movies is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"James Bond\",\r\n    \"releasedate\": \"01.01.1985\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie/2 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Actors is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_actors).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Actors is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Daniel Craig\",\r\n    \"age\": 46,\r\n    \"gender\": \"male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2  (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "/movies  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Movies is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_movies).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Movies is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"James Bond\",\r\n    \"releasedate\": \"01.01.1985\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"movie_id is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie/2 (no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Actors is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_actors).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Actors is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Created is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.created).to.be.an('number')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Daniel Craig\",\r\n    \"age\": 46,\r\n    \"gender\": \"male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2   (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"actor_id is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Deleted is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.deleted).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Executive Director",
			"item": [
				{
					"name": "/movies  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Movies is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_movies).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Movies is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"James Bond\",\r\n    \"releasedate\": \"01.01.1985\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"movie_id is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie/2 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/movies/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Total Actors is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.total_actors).to.be.an('number')\r",
									"});\r",
									"\r",
									"pm.test(\"Actors is array \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors  (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Created is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.created).to.be.an('number')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Daniel Craig\",\r\n    \"age\": 46,\r\n    \"gender\": \"male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3   (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"actor_id is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Indiana Jones\",\r\n    \"releasedate\": \"08.12.1978\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3 (access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sucess to be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"\r",
									"pm.test(\"Deleted is number \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.deleted).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8080/actors/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8080",
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}